{"ast":null,"code":"import slugify from 'slugify';\nimport shortid from 'shortid';\nconst TREE_KEY = \"treeKey\";\n\nclass Tree {\n  constructor(name, scientificName, treeImageURL, seedImageURL, description) {\n    const slug = slugify(name.toLowerCase()) + \"-\" + shortid.generate();\n    this.slug = slug;\n    this.name = name;\n    this.scientificName = scientificName;\n    this.treeImageURL = treeImageURL;\n    this.seedImageURL = seedImageURL;\n    this.description = description;\n  }\n\n}\n\nexport default class TreeDAO {\n  constructor() {\n    const treeJSON = localStorage.getItem(TREE_KEY);\n    const treeArr = JSON.parse(treeJSON);\n\n    if (treeArr === undefined || treeArr === null || treeArr === \"\") {\n      localStorage.setItem(TREE_KEY, JSON.stringify([]));\n    }\n  }\n\n  getList() {\n    const treeJSON = localStorage.getItem(TREE_KEY);\n    const treeArr = JSON.parse(treeJSON);\n    return treeArr;\n  }\n\n  addObjectList(name, scientificName, treeImageURL, seedImageURL, description) {\n    const treeArr = this.getList();\n    const treeObj = new Tree(name, scientificName, treeImageURL, seedImageURL, description);\n    treeArr.push(treeObj);\n    localStorage.setItem(TREE_KEY, JSON.stringify(treeArr));\n  }\n\n  getTreeObj(slug) {\n    const treeArr = this.getList();\n    console.log(treeArr);\n    let treeObj;\n\n    for (treeObj of treeArr) {\n      if (treeObj.slug === slug) {\n        console.log(treeObj);\n        return treeObj;\n      }\n    }\n  }\n\n  onUpdateClick(slug, name, scientificName, treeImageURL, seedImageURL, description) {\n    const treeArr = this.getList();\n    console.log(treeArr);\n    let treeObj = this.getTreeObj(slug);\n    treeObj.name = name;\n    treeObj.scientificName = scientificName;\n    treeObj.treeImageURL = treeImageURL;\n    treeObj.seedImageURL = seedImageURL;\n    treeObj.description = description;\n    localStorage.setItem(TREE_KEY, JSON.stringify(treeArr));\n    alert(\"Successfully Updated\");\n  }\n\n}","map":{"version":3,"sources":["C:/Users/16474/documents/Newfolder/react-midterm-assignment/src/models/treeDAO.js"],"names":["slugify","shortid","TREE_KEY","Tree","constructor","name","scientificName","treeImageURL","seedImageURL","description","slug","toLowerCase","generate","TreeDAO","treeJSON","localStorage","getItem","treeArr","JSON","parse","undefined","setItem","stringify","getList","addObjectList","treeObj","push","getTreeObj","console","log","onUpdateClick","alert"],"mappings":"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","sourcesContent":["\r\nimport slugify from 'slugify';\r\nimport shortid from 'shortid';\r\n\r\nconst TREE_KEY = \"treeKey\";\r\n\r\nclass Tree {\r\n  constructor(name,scientificName,treeImageURL,seedImageURL,description){\r\n    const slug = slugify(name.toLowerCase()) + \"-\" + shortid.generate();\r\n    this.slug = slug;\r\n    this.name = name;\r\n    this.scientificName = scientificName;\r\n    this.treeImageURL = treeImageURL;\r\n    this.seedImageURL = seedImageURL;\r\n    this.description = description;\r\n  }\r\n}\r\nexport default class TreeDAO {\r\n  constructor(){\r\n    const treeJSON = localStorage.getItem(TREE_KEY);\r\n    const treeArr = JSON.parse(treeJSON);\r\n    if(treeArr === undefined || treeArr === null || treeArr === \"\"){\r\n      localStorage.setItem(TREE_KEY,JSON.stringify([]));\r\n    }\r\n  }\r\n  getList(){\r\n    const treeJSON = localStorage.getItem(TREE_KEY);\r\n    const treeArr = JSON.parse(treeJSON);\r\n    return treeArr;\r\n  }\r\n  addObjectList(name,scientificName,treeImageURL,seedImageURL,description){\r\n    const treeArr = this.getList();\r\n    const treeObj = new Tree(name,scientificName,treeImageURL,seedImageURL,description);\r\n    treeArr.push(treeObj);\r\n    localStorage.setItem(TREE_KEY,JSON.stringify(treeArr));\r\n  }\r\n  getTreeObj(slug){\r\n    const treeArr = this.getList();\r\n    console.log(treeArr)\r\n    let treeObj;\r\n    for(treeObj of treeArr){\r\n      if (treeObj.slug === slug){\r\n        console.log(treeObj)\r\n        return treeObj;\r\n      }\r\n    }\r\n  }\r\n  onUpdateClick(slug,name,scientificName,treeImageURL,seedImageURL,description){\r\n    const treeArr = this.getList();\r\n    console.log(treeArr)\r\n    let treeObj = this.getTreeObj(slug);\r\n    treeObj.name = name;\r\n    treeObj.scientificName = scientificName;\r\n    treeObj.treeImageURL = treeImageURL;\r\n    treeObj.seedImageURL = seedImageURL;\r\n    treeObj.description = description;\r\n    localStorage.setItem(TREE_KEY,JSON.stringify(treeArr));\r\n    alert(\"Successfully Updated\");\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}