{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\16474\\\\documents\\\\classs\\\\frontend2020\\\\react\\\\assignment_04\\\\src\\\\edit.js\";\nimport React, { Component } from 'react';\nimport { REGISTER_PAGE_ID, LIST_PAGE_ID, TREE_ARR } from './constants';\nexport default class EditView extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  onBackClick(event) {\n    event.preventDefault();\n    this.props.onPageChange(LIST_PAGE_ID);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(EditTree, {\n      id: this.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: event => this.onBackClick(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Back\"), this.props.id);\n  }\n\n}\nexport class EditTree extends Component {\n  constructor(props) {\n    let treeObj;\n\n    for (treeObj of TREE_ARR) {\n      if (treeObj.id === props.id) {\n        localStorage.setItem(\"EditTreeObject\", JSON.stringify(treeObj));\n      }\n\n      break;\n    }\n\n    super(props);\n    this.state = {\n      id: props.id,\n      treeObj: treeObj\n    };\n  }\n\n  onTreeNameChange(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.treeObj.name,\n      onChange: event => this.onTreeNameChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/16474/documents/classs/frontend2020/react/assignment_04/src/edit.js"],"names":["React","Component","REGISTER_PAGE_ID","LIST_PAGE_ID","TREE_ARR","EditView","constructor","props","onBackClick","event","preventDefault","onPageChange","render","id","EditTree","treeObj","localStorage","setItem","JSON","stringify","state","onTreeNameChange","setState","name","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,EAA0BC,YAA1B,EAAuCC,QAAvC,QAAuD,aAAvD;AACA,eAAe,MAAMC,QAAN,SAAuBJ,SAAvB,CAAgC;AAC7CK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACH;;AACDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChBA,IAAAA,KAAK,CAACC,cAAN;AACA,SAAKH,KAAL,CAAWI,YAAX,CAAwBR,YAAxB;AACD;;AACDS,EAAAA,MAAM,GAAE;AAEJ,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,KAAKL,KAAL,CAAWM,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,OAAO,EAAGJ,KAAD,IAAS,KAAKD,WAAL,CAAiBC,KAAjB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIG,KAAKF,KAAL,CAAWM,EAJd,CADF;AAQD;;AAlB4C;AAoB/C,OAAO,MAAMC,QAAN,SAAuBb,SAAvB,CAAgC;AACrCK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,QAAIQ,OAAJ;;AACD,SAAKA,OAAL,IAAgBX,QAAhB,EAAyB;AACvB,UAAGW,OAAO,CAACF,EAAR,KAAeN,KAAK,CAACM,EAAxB,EAA2B;AACzBG,QAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAtC;AACD;;AACD;AACD;;AACA,UAAMR,KAAN;AACA,SAAKa,KAAL,GAAW;AACTP,MAAAA,EAAE,EAACN,KAAK,CAACM,EADA;AAETE,MAAAA,OAAO,EAACA;AAFC,KAAX;AAMD;;AACDM,EAAAA,gBAAgB,CAACZ,KAAD,EAAO;AACrB,SAAKa,QAAL,CAAc;AACZC,MAAAA,IAAI,EAACd,KAAK,CAACe,MAAN,CAAaC;AADN,KAAd;AAGD;;AACHb,EAAAA,MAAM,GAAE;AACR,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWL,OAAX,CAAmBQ,IAF5B;AAGE,MAAA,QAAQ,EAAGd,KAAD,IAAS,KAAKY,gBAAL,CAAsBZ,KAAtB,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF;AAUC;;AAjCsC","sourcesContent":["import React, { Component } from 'react';\r\nimport { REGISTER_PAGE_ID,LIST_PAGE_ID,TREE_ARR } from './constants';\r\nexport default class EditView extends Component{\r\n  constructor(props){\r\n    super(props);\r\n}\r\nonBackClick(event){\r\n  event.preventDefault();\r\n  this.props.onPageChange(LIST_PAGE_ID)\r\n}\r\nrender(){\r\n\r\n    return(\r\n      <div>\r\n        <h1>Edit</h1>\r\n        <EditTree id={this.props.id}/>\r\n        <button onClick={(event)=>this.onBackClick(event)}>Back</button>\r\n        {this.props.id}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport class EditTree extends Component{\r\n  constructor(props){\r\n    let treeObj;\r\n   for (treeObj of TREE_ARR){\r\n     if(treeObj.id === props.id){\r\n       localStorage.setItem(\"EditTreeObject\",JSON.stringify(treeObj))\r\n     }\r\n     break;\r\n   }\r\n    super(props);\r\n    this.state={\r\n      id:props.id,\r\n      treeObj:treeObj,\r\n\r\n    }\r\n\r\n  }\r\n  onTreeNameChange(event){\r\n    this.setState({\r\n      name:event.target.value,\r\n    })\r\n  }\r\nrender(){\r\nreturn(\r\n  <div>\r\n  <input\r\n    type=\"text\"\r\n    value={this.state.treeObj.name}\r\n    onChange={(event)=>this.onTreeNameChange(event)}\r\n    />\r\n\r\n  </div>\r\n);\r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}